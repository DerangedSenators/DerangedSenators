<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classLogger" kind="class" language="C++" prot="public">
    <compoundname>Logger</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classLogger_1ae66fd1973aff08981ff30bd20d24752a" prot="private" static="yes" mutable="no">
        <type><ref refid="classLogger" kindref="compound">Logger</ref> *</type>
        <definition>Logger* Logger::mInstance</definition>
        <argsstring></argsstring>
        <name>mInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="27" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLogger_1a89fd90aeb0d8a6f67511e22b64d14eb6" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Logger::mMutex</definition>
        <argsstring></argsstring>
        <name>mMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="28" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classLogger_1abc41bfb031d896170c7675fa96a6b30c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Logger::Logger</definition>
        <argsstring>()</argsstring>
        <name>Logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="29" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classLogger_1acb668a9e186a25fbaad2e4af6d1ed00a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Logger::~Logger</definition>
        <argsstring>()</argsstring>
        <name>~Logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="30" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLogger_1ae69a3a7895a51631400ea34f7cd7b915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Logger::Logger</definition>
        <argsstring>(Logger &amp;otherLogger)=delete</argsstring>
        <name>Logger</name>
        <param>
          <type><ref refid="classLogger" kindref="compound">Logger</ref> &amp;</type>
          <declname>otherLogger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Singleton Class should not be cloneable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLogger_1af7266f0b4cc9b6c05a20fb76b96c4ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Logger::operator=</definition>
        <argsstring>(const Logger &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classLogger" kindref="compound">Logger</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Singleton classes must not be assignable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLogger_1acf7e80e0ea2dc9e8104459e2c6bfee4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Logger::log</definition>
        <argsstring>(LogSeverity severity, std::string message)</argsstring>
        <name>log</name>
        <param>
          <type>LogSeverity</type>
          <declname>severity</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classLogger_1aa6f6d11f892277aacaf0fe1db82e6829" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLogger" kindref="compound">Logger</ref> *</type>
        <definition>Logger * Logger::getLogger</definition>
        <argsstring>()</argsstring>
        <name>getLogger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="43" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="codedoc/playerlink/core/utils/logger/Logger.h" line="25" column="1" bodyfile="codedoc/playerlink/core/utils/logger/Logger.h" bodystart="25" bodyend="47"/>
    <listofallmembers>
      <member refid="classLogger_1aa6f6d11f892277aacaf0fe1db82e6829" prot="public" virt="non-virtual"><scope>Logger</scope><name>getLogger</name></member>
      <member refid="classLogger_1acf7e80e0ea2dc9e8104459e2c6bfee4f" prot="public" virt="non-virtual"><scope>Logger</scope><name>log</name></member>
      <member refid="classLogger_1abc41bfb031d896170c7675fa96a6b30c" prot="private" virt="non-virtual"><scope>Logger</scope><name>Logger</name></member>
      <member refid="classLogger_1ae69a3a7895a51631400ea34f7cd7b915" prot="public" virt="non-virtual"><scope>Logger</scope><name>Logger</name></member>
      <member refid="classLogger_1ae66fd1973aff08981ff30bd20d24752a" prot="private" virt="non-virtual"><scope>Logger</scope><name>mInstance</name></member>
      <member refid="classLogger_1a89fd90aeb0d8a6f67511e22b64d14eb6" prot="private" virt="non-virtual"><scope>Logger</scope><name>mMutex</name></member>
      <member refid="classLogger_1af7266f0b4cc9b6c05a20fb76b96c4ada" prot="public" virt="non-virtual"><scope>Logger</scope><name>operator=</name></member>
      <member refid="classLogger_1acb668a9e186a25fbaad2e4af6d1ed00a" prot="private" virt="non-virtual"><scope>Logger</scope><name>~Logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
