<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTCPSocket" kind="class" language="C++" prot="public">
    <compoundname>TCPSocket</compoundname>
    <basecompoundref refid="classSocket" prot="public" virt="non-virtual">Socket</basecompoundref>
    <includes local="no">tcpsocket.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTCPSocket_1ae9e94257e32517b80cbfddec0b18e3d7" prot="private" static="no" mutable="no">
        <type>struct pollfd</type>
        <definition>struct pollfd TCPSocket::mPollFD</definition>
        <argsstring></argsstring>
        <name>mPollFD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="73" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTCPSocket_1a1f6081cb166796d34495e19d9a5aa1cf" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TCPSocket::TCPSocket</definition>
        <argsstring>(int fd)</argsstring>
        <name>TCPSocket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="30" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a7a50427a401d1a6f3209d51818bad901" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TCPSocket::TCPSocket</definition>
        <argsstring>()</argsstring>
        <name>TCPSocket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="31" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a2e2e99f5b7cba6325c48424c992be5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::connect</definition>
        <argsstring>(std::string address, std::string port)</argsstring>
        <name>connect</name>
        <param>
          <type>std::string</type>
          <declname>address</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Connects to an address and port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if connection was successful and false if there was a problem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="39" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="11" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1aeeea269d2c0339e19f92109b1d1b1c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::connectWithTimeout</definition>
        <argsstring>(std::string address, std::string port, int seconds=TIMEOUT_SECONDS, int microseconds=TIMEOUT_MICROSECONDS)</argsstring>
        <name>connectWithTimeout</name>
        <param>
          <type>std::string</type>
          <declname>address</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
          <defval>TIMEOUT_SECONDS</defval>
        </param>
        <param>
          <type>int</type>
          <declname>microseconds</declname>
          <defval>TIMEOUT_MICROSECONDS</defval>
        </param>
        <briefdescription>
<para>Connects to an address and port with a timeout. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination port </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of seconds to wait for a reply </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>microseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of microseconds to wait for a reply </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if connection was successful and false if there was a problem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="48" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="36" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a8f94fa439a6edf2366c1fcdd8ac9114b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::canReceive</definition>
        <argsstring>(int timeout=10000)</argsstring>
        <name>canReceive</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
<para>Checks if the remote machine can recieve. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of microseconds to wait before returning false </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if remote is able to recieve packets and false if it can&apos;t or does not respond </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="54" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="81" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a42edb393883abaa25b6f52477164d942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TCPSocket::recieve</definition>
        <argsstring>(void *buffer, size_t bufferLength)</argsstring>
        <name>recieve</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="56" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a82e5fd63ae8afea64df9e39c0f3b6dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TCPSocket::recieveAll</definition>
        <argsstring>(void *buffer, size_t bufferLength)</argsstring>
        <name>recieveAll</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="57" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="104" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a7a661d5a1c283dc37b0f82e8de2d85ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * TCPSocket::recieveBytes</definition>
        <argsstring>()</argsstring>
        <name>recieveBytes</name>
        <briefdescription>
<para>Recieves bytes from the remote. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an char* type used to hold incoming bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="62" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="119" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a64c90033bb32fb537a5e79cbc4b0bcd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::setRecvTimeout</definition>
        <argsstring>(int seconds=TIMEOUT_SECONDS, int microseconds=TIMEOUT_MICROSECONDS)</argsstring>
        <name>setRecvTimeout</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
          <defval>TIMEOUT_SECONDS</defval>
        </param>
        <param>
          <type>int</type>
          <declname>microseconds</declname>
          <defval>TIMEOUT_MICROSECONDS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="63" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="182" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a3b9f4d4438c7e389f2c1ca5cc58d4b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TCPSocket::send</definition>
        <argsstring>(void const *buffer, size_t bufferLength)</argsstring>
        <name>send</name>
        <param>
          <type>void const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="65" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a47510691812384bfe2d644ceda80a06a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TCPSocket::sendAll</definition>
        <argsstring>(void const *buffer, size_t bufferLength)</argsstring>
        <name>sendAll</name>
        <param>
          <type>void const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="66" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="141" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1a2089125905ad6aae366d9a7e17b93c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::sendBytes</definition>
        <argsstring>(unsigned char *message)</argsstring>
        <name>sendBytes</name>
        <param>
          <type>unsigned char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sends bytes to remote. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes in a unsigned char* </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if message was recieved successfully </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="72" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="157" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classTCPSocket_1ac2ced635e31f0ba0d06cfbfd01479b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TCPSocket::setSendTimeout</definition>
        <argsstring>(int seconds=TIMEOUT_SECONDS, int microseconds=TIMEOUT_MICROSECONDS)</argsstring>
        <name>setSendTimeout</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
          <defval>TIMEOUT_SECONDS</defval>
        </param>
        <param>
          <type>int</type>
          <declname>microseconds</declname>
          <defval>TIMEOUT_MICROSECONDS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="73" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.cpp" bodystart="171" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classTCPSocket" kindref="compound">TCPSocket</ref> Class extends the base socket class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="141">
        <label>Socket</label>
        <link refid="classSocket"/>
      </node>
      <node id="140">
        <label>TCPSocket</label>
        <link refid="classTCPSocket"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="143">
        <label>Socket</label>
        <link refid="classSocket"/>
      </node>
      <node id="142">
        <label>TCPSocket</label>
        <link refid="classTCPSocket"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="codedoc/playerlink/core/net/tcp/tcpsocket.h" line="28" column="1" bodyfile="codedoc/playerlink/core/net/tcp/tcpsocket.h" bodystart="28" bodyend="76"/>
    <listofallmembers>
      <member refid="classTCPSocket_1a8f94fa439a6edf2366c1fcdd8ac9114b" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>canReceive</name></member>
      <member refid="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>close</name></member>
      <member refid="classTCPSocket_1a2e2e99f5b7cba6325c48424c992be5b5" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>connect</name></member>
      <member refid="classTCPSocket_1aeeea269d2c0339e19f92109b1d1b1c32" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>connectWithTimeout</name></member>
      <member refid="classSocket_1ab8ba548a41bbbccb9eef1ae22c4d799c" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>getAddress</name></member>
      <member refid="classSocket_1af46a74a554fbc2ce08446eaa8d3dda37" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>getLastError</name></member>
      <member refid="classSocket_1a3d48dfb424a9853ad2bcb5a7664f76c0" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>getPort</name></member>
      <member refid="classSocket_1afd21401fa7f8ff6ad4e3083142bb9ade" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>getSocketDescriptor</name></member>
      <member refid="classSocket_1acba7450444a1ff7484abcad45d3a2395" prot="protected" virt="non-virtual"><scope>TCPSocket</scope><name>isBlocked</name></member>
      <member refid="classSocket_1a7e54aa5a8807a44096258b41fd27ecf3" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>isClosed</name></member>
      <member refid="classTCPSocket_1ae9e94257e32517b80cbfddec0b18e3d7" prot="private" virt="non-virtual"><scope>TCPSocket</scope><name>mPollFD</name></member>
      <member refid="classSocket_1a1c7a05cd7a83e7842d67ad81d596b027" prot="protected" virt="non-virtual"><scope>TCPSocket</scope><name>mSocketFD</name></member>
      <member refid="classTCPSocket_1a42edb393883abaa25b6f52477164d942" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>recieve</name></member>
      <member refid="classTCPSocket_1a82e5fd63ae8afea64df9e39c0f3b6dbb" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>recieveAll</name></member>
      <member refid="classTCPSocket_1a7a661d5a1c283dc37b0f82e8de2d85ec" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>recieveBytes</name></member>
      <member refid="classTCPSocket_1a3b9f4d4438c7e389f2c1ca5cc58d4b76" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>send</name></member>
      <member refid="classTCPSocket_1a47510691812384bfe2d644ceda80a06a" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>sendAll</name></member>
      <member refid="classTCPSocket_1a2089125905ad6aae366d9a7e17b93c79" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>sendBytes</name></member>
      <member refid="classSocket_1a14aeb614f43be5dccd69c7bec6a0e1e8" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>setBlocking</name></member>
      <member refid="classTCPSocket_1a64c90033bb32fb537a5e79cbc4b0bcd3" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>setRecvTimeout</name></member>
      <member refid="classTCPSocket_1ac2ced635e31f0ba0d06cfbfd01479b5a" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>setSendTimeout</name></member>
      <member refid="classSocket_1aa2d2ef4b12252e237f8e8d47c8000a8e" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>Socket</name></member>
      <member refid="classSocket_1a5390f8264f7872c9a8e695e01184e929" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>Socket</name></member>
      <member refid="classSocket_1a65d2d945a320889927555dc639daa0db" prot="protected" virt="non-virtual"><scope>TCPSocket</scope><name>socketIsClosed</name></member>
      <member refid="classTCPSocket_1a1f6081cb166796d34495e19d9a5aa1cf" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>TCPSocket</name></member>
      <member refid="classTCPSocket_1a7a50427a401d1a6f3209d51818bad901" prot="public" virt="non-virtual"><scope>TCPSocket</scope><name>TCPSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
