<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSocket" kind="class" language="C++" prot="public">
    <compoundname>Socket</compoundname>
    <derivedcompoundref refid="classTCPServer" prot="public" virt="non-virtual">TCPServer</derivedcompoundref>
    <derivedcompoundref refid="classTCPSocket" prot="public" virt="non-virtual">TCPSocket</derivedcompoundref>
    <includes local="no">Socket.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classSocket_1a1c7a05cd7a83e7842d67ad81d596b027" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Socket::mSocketFD</definition>
        <argsstring></argsstring>
        <name>mSocketFD</name>
        <briefdescription>
<para>File Descriptor for this socket instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="96" column="1" bodyfile="codedoc/playerlink/core/net/Socket.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1a65d2d945a320889927555dc639daa0db" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Socket::socketIsClosed</definition>
        <argsstring></argsstring>
        <name>socketIsClosed</name>
        <briefdescription>
<para>Flag if socket is open or closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="100" column="1" bodyfile="codedoc/playerlink/core/net/Socket.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1acba7450444a1ff7484abcad45d3a2395" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Socket::isBlocked</definition>
        <argsstring></argsstring>
        <name>isBlocked</name>
        <briefdescription>
<para>Boolean to determine if blocking is enabled on this socket instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="104" column="1" bodyfile="codedoc/playerlink/core/net/Socket.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSocket_1aa2d2ef4b12252e237f8e8d47c8000a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Socket::Socket</definition>
        <argsstring>(int family, int type, int flag)</argsstring>
        <name>Socket</name>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classSocket" kindref="compound">Socket</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>Address Family. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type specification for the new socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>The protocol used for data transmission </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If no error occurs, socket returns a descriptor referencing the new socket. Otherwise, a value of -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="53" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a5390f8264f7872c9a8e695e01184e929" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Socket::Socket</definition>
        <argsstring>(int fd)</argsstring>
        <name>Socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="54" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1ab8ba548a41bbbccb9eef1ae22c4d799c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Socket::getAddress</definition>
        <argsstring>() const</argsstring>
        <name>getAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Gets the address of the remote device </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="59" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a3d48dfb424a9853ad2bcb5a7664f76c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Socket::getPort</definition>
        <argsstring>() const</argsstring>
        <name>getPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The port number used for this connection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="64" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1afd21401fa7f8ff6ad4e3083142bb9ade" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::getSocketDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>getSocketDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The socket descriptor used for this socket </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="69" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Socket::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>Closes the connection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a7e54aa5a8807a44096258b41fd27ecf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Socket::isClosed</definition>
        <argsstring>()</argsstring>
        <name>isClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the socket connection has been closed or false if it is still open </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="78" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="86" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a14aeb614f43be5dccd69c7bec6a0e1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Socket::setBlocking</definition>
        <argsstring>(bool swtch)</argsstring>
        <name>setBlocking</name>
        <param>
          <type>bool</type>
          <declname>swtch</declname>
        </param>
        <briefdescription>
<para>Allows you to set the blocking mode for this file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets the blocking value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the blocking, True if blocking was successful or false if there was an issue with changing the blocking status </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1af46a74a554fbc2ce08446eaa8d3dda37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::getLastError</definition>
        <argsstring>()</argsstring>
        <name>getLastError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The last error number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codedoc/playerlink/core/net/Socket.h" line="90" column="1" bodyfile="codedoc/playerlink/core/net/Socket.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Lowest socket implementation. This class will be used by top level socket implementations. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="125">
        <label>TCPServer</label>
        <link refid="classTCPServer"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>Socket</label>
        <link refid="classSocket"/>
      </node>
      <node id="126">
        <label>TCPSocket</label>
        <link refid="classTCPSocket"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="codedoc/playerlink/core/net/Socket.h" line="44" column="1" bodyfile="codedoc/playerlink/core/net/Socket.h" bodystart="44" bodyend="105"/>
    <listofallmembers>
      <member refid="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" prot="public" virt="non-virtual"><scope>Socket</scope><name>close</name></member>
      <member refid="classSocket_1ab8ba548a41bbbccb9eef1ae22c4d799c" prot="public" virt="non-virtual"><scope>Socket</scope><name>getAddress</name></member>
      <member refid="classSocket_1af46a74a554fbc2ce08446eaa8d3dda37" prot="public" virt="non-virtual"><scope>Socket</scope><name>getLastError</name></member>
      <member refid="classSocket_1a3d48dfb424a9853ad2bcb5a7664f76c0" prot="public" virt="non-virtual"><scope>Socket</scope><name>getPort</name></member>
      <member refid="classSocket_1afd21401fa7f8ff6ad4e3083142bb9ade" prot="public" virt="non-virtual"><scope>Socket</scope><name>getSocketDescriptor</name></member>
      <member refid="classSocket_1acba7450444a1ff7484abcad45d3a2395" prot="protected" virt="non-virtual"><scope>Socket</scope><name>isBlocked</name></member>
      <member refid="classSocket_1a7e54aa5a8807a44096258b41fd27ecf3" prot="public" virt="non-virtual"><scope>Socket</scope><name>isClosed</name></member>
      <member refid="classSocket_1a1c7a05cd7a83e7842d67ad81d596b027" prot="protected" virt="non-virtual"><scope>Socket</scope><name>mSocketFD</name></member>
      <member refid="classSocket_1a14aeb614f43be5dccd69c7bec6a0e1e8" prot="public" virt="non-virtual"><scope>Socket</scope><name>setBlocking</name></member>
      <member refid="classSocket_1aa2d2ef4b12252e237f8e8d47c8000a8e" prot="public" virt="non-virtual"><scope>Socket</scope><name>Socket</name></member>
      <member refid="classSocket_1a5390f8264f7872c9a8e695e01184e929" prot="public" virt="non-virtual"><scope>Socket</scope><name>Socket</name></member>
      <member refid="classSocket_1a65d2d945a320889927555dc639daa0db" prot="protected" virt="non-virtual"><scope>Socket</scope><name>socketIsClosed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
